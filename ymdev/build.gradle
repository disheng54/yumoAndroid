apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

def applicationID = "com.yumo.android"
android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion


    defaultConfig {
        applicationId applicationID
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"
        multiDexEnabled true

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        ndk {
            abiFilters "armeabi", "armeabi-v7a", "x86"
        }

        // 使用support.v8.renderscript
        renderscriptTargetApi 18
        renderscriptSupportModeEnabled true
    }

    signingConfigs {
        system {
            // 配置release版本的数字签名证书(为了方便，这里的release版本和debug版本共用一个数字签名证书)
            storeFile file("../yumodev.jks")
            storePassword "123456"
            keyAlias "yumodev"
            keyPassword "123456"
        }
        release {
            // 配置release版本的数字签名证书(为了方便，这里的release版本和debug版本共用一个数字签名证书)
            storeFile file("../keystore.jks")
            storePassword "123456"
            keyAlias "yumodev"
            keyPassword "123456"
        }
    }


    buildTypes {
        debug{
            if (project['isSystem'].equals("true")){
                signingConfig signingConfigs.system
                manifestPlaceholders.put("app_uid", "android.uid.system")
            }else{
                signingConfig signingConfigs.release
                manifestPlaceholders.put("app_uid", applicationID)
            }
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            if (project['isSystem'].equals("true")){
                signingConfig signingConfigs.system
                manifestPlaceholders.put("app_uid", "android.uid.system")
            }else{
                signingConfig signingConfigs.release
                manifestPlaceholders.put("app_uid", applicationID)
            }
        }
    }

    lintOptions {
        abortOnError false
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }


    repositories {
        flatDir {
            dirs 'libs'
        }
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')

    implementation "$appcompat"
    implementation "$legacy"
    implementation "$material"
    implementation "$lifecycle_extensions"
    implementation "$multidex"

    implementation "$glide3"
    implementation "$glide3_okhttp"
    implementation "$rxpermissions"
    implementation "$zxing"

    implementation("$ym_android_demo_lib"){
        exclude group: 'com.android.support'
    }

    compile project(':library')
    compile project(':libres')
    compile project(':ymzxingLiteLib')
    compile project(':ymui')
    implementation "$otto"


    implementation "$retrofit2"
    implementation "$gson"
    implementation "$retrofit2_gson"
    implementation "$kotlin_jre"

    implementation "$eventbus3"


    androidTestCompile('androidx.test.espresso:espresso-core:3.1.0-alpha4', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    testCompile 'junit:junit:4.12'



}


task debugApkToSystem(type: Exec) {
    executable 'sh'
    args "-c","./debugapk_to_system.sh"
}

task debugApkToSystemPriv(type: Exec) {
    executable 'sh'
    args "-c","./debugapk_to_system_priv.sh"
}

