apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion
    defaultConfig {
        applicationId "com.yumodev.process"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        manifestPlaceholders = [
                XG_ACCESS_ID:"2100283243",
                XG_ACCESS_KEY : "A3685WIJ1KXN",
        ]
    }

    signingConfigs {
        release {
            // 配置release版本的数字签名证书(为了方便，这里的release版本和debug版本共用一个数字签名证书)
            storeFile file("../keystore.jks")
            storePassword "123456"
            keyAlias "yumodev"
            keyPassword "123456"
        }
    }


    buildTypes {
        debug{
            debuggable true
            signingConfig signingConfigs.release
        }
        release {
            //manifestPlaceholders.put("app_label", "@string/app_name")
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }



    sourceSets{
        main{
            //jniLibs.srcDir 'libs'
            jniLibs.srcDirs = ['libs', 'libs']
            jni.srcDirs = []
        }
    }

    repositories {
        flatDir {
            dirs 'libs'
        }
    }


    lintOptions {
        abortOnError false
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "$kotlin_jre"
    implementation "$appcompat"
    implementation "$material"
    annotationProcessor "$annotation"
    implementation "$constraint_layout"
    implementation "$ym_android_demo_lib"
    implementation "$xlog"
    implementation "$umeng_analytics"
    implementation "$eventbus3"
    implementation "$crashreport"


    compile project(':library')
    compile project(':xglib')

   // compile 'com.tencent.bugly:crashreport:latest.release'
//    compile 'com.flurry.android:analytics:8.2.0@aar'

    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.1.0-alpha4'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.0-alpha4'
}


def copyAndMvApk(String intoPath){
    copy {
        from(buildDir.absolutePath + '/outputs/apk/release/') {
            include project.name + '-release.apk'
        }
        //def intoPath = "./../testplugin/src/main/assets/skin/"
        println(intoPath)
        into(intoPath)
        rename project.name + '-release.apk', 'process-release.apk'
    }
}

afterEvaluate {
    tasks.getByName("assembleRelease").doLast {
        copyAndMvApk("/Users/yumo/git/py/ympy/flask_hello/static/")
    }
}
